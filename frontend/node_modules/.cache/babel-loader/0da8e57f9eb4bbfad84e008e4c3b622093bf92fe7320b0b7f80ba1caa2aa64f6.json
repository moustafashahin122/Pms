{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nconst initialState = {\n  tokens: {},\n  user: {},\n  full: false,\n  auth: false\n};\nexport const getTokens = createAsyncThunk(\"getTokens\", async () => {\n  const {\n    data\n  } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n    \"email\": \"moustafashahin122@gmail.com\",\n    \"password\": \"lovelove122@A\"\n  });\n  console.log(data);\n  // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:23 ~ getTokens ~ data:\", data);\n  return data;\n});\nexport const refreshTokens = createAsyncThunk(\"refreshTokens\", async (refresh, thunkAPI) => {\n  const {\n    data\n  } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY4NzM4MTA4NCwiaWF0IjoxNjg3Mjk0Njg0LCJqdGkiOiJjYTE3NGNmZTdhYmY0NTNjYWZiOWFmODQ3MzA1MDc3NyIsInVzZXJfaWQiOjR9.b-Js_tpFQfiMd6Qif2CsSltrVJ77NflXH7KN-_zH4r0\"\n  });\n  console.log(\"ðŸš€ ~ file: TokensSlice.jsx:33 ~ refreshTokens ~ data.access:\", data.access);\n  return data;\n});\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n    setTokens: (state, action) => {\n      const {\n        access,\n        refresh\n      } = action.payload;\n      // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:34 ~ access:\", access);\n      state.tokens.access = access;\n      state.tokens.refresh = refresh;\n    },\n    setUser: (state, action) => {\n      const {\n        user_id\n      } = action.payload;\n      state.user.user_id = user_id;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:44 ~ user_id:\", user_id);\n    },\n    updateAuth: (state, action) => {\n      state.auth = action.payload;\n    }\n    // refreshTokens: (state) => {\n    //   state.auth ;\n\n    // },\n  },\n\n  extraReducers: builder => {\n    builder.addCase(getTokens.fulfilled, (state, action) => {\n      state.tokens = action.payload;\n      // state.tokens.access = access;\n      // state.tokens.refresh = refresh;\n      // console.log(\"dssssssssssssssssssssssssssssss\", state.tokens.access);\n      state.full = true;\n    });\n    builder.addCase(refreshTokens.fulfilled, (state, action) => {\n      state.tokens.access = action.payload.access;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:88 ~ builder.addCase ~ action.payload.access:\", action.payload.access);\n      // state.tokens.access = access;\n      // state.tokens.refresh = refresh;\n      // console.log(\"dssssssssssssssssssssssssssssss\", state.tokens.access);\n\n      state.auth = true;\n      const {\n        user_id\n      } = jwt_decode(state.tokens.access);\n      state.user.user_id = user_id;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:89 ~ builder.addCase ~ user_id:\", user_id);\n      localStorage.setItem('Tokens', JSON.stringify(response.data));\n    });\n    builder.addCase(refreshTokens.rejected, (state, action) => {\n      // logout\n      alert(\"failed to refresh\");\n    });\n  }\n});\nexport const {\n  setTokens,\n  updateAuth,\n  setUser\n} = TokensSlice.actions;\nexport default TokensSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","jwt_decode","initialState","tokens","user","full","auth","getTokens","data","post","console","log","refreshTokens","refresh","thunkAPI","access","TokensSlice","name","reducers","setTokens","state","action","payload","setUser","user_id","updateAuth","extraReducers","builder","addCase","fulfilled","localStorage","setItem","JSON","stringify","response","rejected","alert","actions","reducer"],"sources":["/home/shahin/GithubU/pms-iti/frontend/src/redux/slices/TokensSlice.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\n\n\n\n\nconst initialState = {\n  tokens: {},\n  user: {},\n  full: false,\n  auth: false,\n};\n\nexport const getTokens = createAsyncThunk(\"getTokens\", async () => {\n  const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n    \"email\": \"moustafashahin122@gmail.com\",\n    \"password\": \"lovelove122@A\"\n\n  }\n  );\n  console.log(data);\n  // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:23 ~ getTokens ~ data:\", data);\n  return data;\n});\nexport const refreshTokens = createAsyncThunk(\"refreshTokens\", async (refresh, thunkAPI) => {\n  const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n    \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY4NzM4MTA4NCwiaWF0IjoxNjg3Mjk0Njg0LCJqdGkiOiJjYTE3NGNmZTdhYmY0NTNjYWZiOWFmODQ3MzA1MDc3NyIsInVzZXJfaWQiOjR9.b-Js_tpFQfiMd6Qif2CsSltrVJ77NflXH7KN-_zH4r0\",\n  }\n  );\n  console.log(\"ðŸš€ ~ file: TokensSlice.jsx:33 ~ refreshTokens ~ data.access:\", data.access);\n  return data;\n\n}\n);\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n\n\n    setTokens: (state, action) => {\n\n      const { access, refresh } = action.payload;\n      // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:34 ~ access:\", access);\n      state.tokens.access = access;\n      state.tokens.refresh = refresh;\n    },\n    setUser: (state, action) => {\n\n      const { user_id } = action.payload;\n      state.user.user_id = user_id;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:44 ~ user_id:\", user_id);\n\n    },\n    updateAuth: (state, action) => {\n\n      state.auth = action.payload;\n\n\n    },\n    // refreshTokens: (state) => {\n    //   state.auth ;\n\n\n    // },\n\n\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(getTokens.fulfilled, (state, action) => {\n      state.tokens = action.payload;\n      // state.tokens.access = access;\n      // state.tokens.refresh = refresh;\n      // console.log(\"dssssssssssssssssssssssssssssss\", state.tokens.access);\n      state.full = true;\n    });\n    builder.addCase(refreshTokens.fulfilled, (state, action) => {\n      state.tokens.access = action.payload.access;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:88 ~ builder.addCase ~ action.payload.access:\", action.payload.access);\n      // state.tokens.access = access;\n      // state.tokens.refresh = refresh;\n      // console.log(\"dssssssssssssssssssssssssssssss\", state.tokens.access);\n\n      state.auth = true;\n      const { user_id } = jwt_decode(state.tokens.access);\n      state.user.user_id = user_id;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:89 ~ builder.addCase ~ user_id:\", user_id)\n      localStorage.setItem('Tokens', JSON.stringify(response.data));\n\n    });\n    builder.addCase(refreshTokens.rejected, (state, action) => {\n      // logout\n      alert(\"failed to refresh\");\n    });\n  },\n});\nexport const { setTokens, updateAuth, setUser } = TokensSlice.actions;\n\nexport default TokensSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}