{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  tokens: {},\n  full: false\n};\nexport const getTokens = createAsyncThunk(\"getTokens\", async () => {\n  const {\n    data\n  } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n    \"email\": \"moustafashahin122@gmail.com\",\n    \"password\": \"lovelove122@A\"\n  });\n  console.log(data);\n  return data;\n});\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n    // fectchProducts: (state, action) => {\n    //   state.Products = action.payload;\n    // },\n  },\n  extraReducers: builder => {\n    builder.addCase(getTokens.fulfilled, (state, action) => {\n      data = action.payload;\n      console.log(action.payload);\n      state.full = true;\n    });\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  ToCart\n} = TokensSlice.actions;\nexport default TokensSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","tokens","full","getTokens","data","post","console","log","TokensSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","addToCart","removeFromCart","ToCart","actions","reducer"],"sources":["/home/shahin/GithubU/pms-iti/frontend/src/redux/slices/TokensSlice.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst initialState = {\n  tokens: {},\n  full: false,\n};\n\nexport const getTokens = createAsyncThunk(\"getTokens\", async () => {\n  const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n    \"email\": \"moustafashahin122@gmail.com\",\n    \"password\": \"lovelove122@A\"\n\n  }\n  );\n  console.log(data);\n  return data;\n});\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n    // fectchProducts: (state, action) => {\n    //   state.Products = action.payload;\n    // },\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(getTokens.fulfilled, (state, action) => {\n      data= action.payload;\n      console.log(action.payload);\n      state.full = true;\n    });\n  },\n});\n\nexport const { addToCart, removeFromCart, ToCart } = TokensSlice.actions;\nexport default TokensSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,CAAC,CAAC;EACVC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGN,gBAAgB,CAAC,WAAW,EAAE,YAAY;EACjE,MAAM;IAAEO;EAAK,CAAC,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,wCAAwC,EAAE;IAC1E,OAAO,EAAE,6BAA6B;IACtC,UAAU,EAAE;EAEd,CACA,CAAC;EACDC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,OAAOA,IAAI;AACb,CAAC,CAAC;AACF,MAAMI,WAAW,GAAGV,WAAW,CAAC;EAC9BW,IAAI,EAAE,QAAQ;EACdT,YAAY;EACZU,QAAQ,EAAE;IACR;IACA;IACA;EAAA,CACD;EAEDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAACV,SAAS,CAACW,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtDZ,IAAI,GAAEY,MAAM,CAACC,OAAO;MACpBX,OAAO,CAACC,GAAG,CAACS,MAAM,CAACC,OAAO,CAAC;MAC3BF,KAAK,CAACb,IAAI,GAAG,IAAI;IACnB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEgB,SAAS;EAAEC,cAAc;EAAEC;AAAO,CAAC,GAAGZ,WAAW,CAACa,OAAO;AACxE,eAAeb,WAAW,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}