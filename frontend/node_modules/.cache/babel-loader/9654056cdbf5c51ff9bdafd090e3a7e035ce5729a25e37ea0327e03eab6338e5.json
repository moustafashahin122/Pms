{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nconst initialState = {\n  tokens: {},\n  user: {},\n  full: false,\n  auth: false,\n  // updateTokensfun: {},\n  running_interval: {},\n  loggedin: false\n};\n\n// export const getTokens = createAsyncThunk(\"getTokens\", async () => {\n//   const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n//     \"email\": \"moustafashahin122@gmail.com\",\n//     \"password\": \"lovelove122@A\"\n\n//   }\n//   );\n//   console.log(data);\n//   // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:23 ~ getTokens ~ data:\", data);\n//   return data;\n// });\n\nexport const refreshTokens = createAsyncThunk(\"refreshTokens\", async refresh => {\n  const {\n    data\n  } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n    \"refresh\": refresh\n  });\n  console.log(\"ðŸš€ ~ file: TokensSlice.jsx:33 ~ refreshTokens ~ data.access:\", data.access);\n  return data;\n});\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n    setTokens: (state, action) => {\n      const {\n        access,\n        refresh\n      } = action.payload;\n      // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:34 ~ access:\", access);\n      state.tokens.access = access;\n      state.tokens.refresh = refresh;\n    },\n    logout: (state, action) => {\n      if (sta) {\n        console.log(\"ðŸš€ ~ file: TokensSlice.jsx:62 ~ state.running_interval:\", state.running_interval);\n        alert(\"interval cleared\");\n        clearInterval(state.running_interval);\n      }\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:67 ~ state.running_interval:\", state.running_interval);\n      localStorage.clear();\n      alert(\"logou\");\n      state.tokens = {};\n      state.auth = false;\n      state.user = {};\n      state.loggedin = false;\n    },\n    setUser: (state, action) => {\n      const {\n        user_id\n      } = action.payload;\n      state.user.user_id = user_id;\n    },\n    updateAuth: (state, action) => {\n      state.auth = action.payload;\n    },\n    setRunningInterval: (state, action) => {\n      if (!state.loggedin) {\n        state.running_interval = action.payload;\n        console.log(\"///////////////////////////////////////////////////////////////////////////////\");\n        console.log(\"ðŸš€ ~ file: TokensSlice.jsx:89 ~ state.running_interval:\", state.running_interval);\n      } else {\n        alert(\"there is another interval running\");\n      }\n    },\n    setLoggedIn: (state, action) => {\n      state.loggedin = true;\n    },\n    setupdateTokensfun: (state, action) => {\n      state.updateTokensfun = action.payload;\n    }\n    // refreshTokens: (state) => {\n    //   state.auth ;\n\n    // },\n  },\n\n  extraReducers: builder => {\n    // builder.addCase(getTokens.fulfilled, (state, action) => {\n    //   state.tokens = action.payload;\n    //   // state.tokens.access = access;\n    //   // state.tokens.refresh = refresh;\n    //   // console.log(\"dssssssssssssssssssssssssssssss\", state.tokens.access);\n    //   state.full = true;\n    // });\n\n    builder.addCase(refreshTokens.fulfilled, (state, action) => {\n      state.tokens.access = action.payload.access;\n      // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:88 ~ builder.addCase ~ action.payload.access:\", action.payload.access);\n\n      console.log(\"*******************************************************************\");\n      state.auth = true;\n      const {\n        user_id\n      } = jwt_decode(state.tokens.access);\n      state.user.user_id = user_id;\n      // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:89 ~ builder.addCase ~ user_id:\", user_id);\n      state.loggedin = true;\n    });\n    builder.addCase(refreshTokens.rejected, (state, action) => {\n      alert(\"failed to refresh\");\n    });\n  }\n});\nexport const {\n  setTokens,\n  updateAuth,\n  setUser,\n  logout,\n  setupdateTokensfun,\n  setRunningInterval,\n  setLoggedIn\n} = TokensSlice.actions;\nexport default TokensSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","jwt_decode","initialState","tokens","user","full","auth","running_interval","loggedin","refreshTokens","refresh","data","post","console","log","access","TokensSlice","name","reducers","setTokens","state","action","payload","logout","sta","alert","clearInterval","localStorage","clear","setUser","user_id","updateAuth","setRunningInterval","setLoggedIn","setupdateTokensfun","updateTokensfun","extraReducers","builder","addCase","fulfilled","rejected","actions","reducer"],"sources":["/home/shahin/GithubU/pms-iti/frontend/src/redux/slices/TokensSlice.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\n\n\n\n\nconst initialState = {\n  tokens: {},\n  user: {},\n  full: false,\n  auth: false,\n  // updateTokensfun: {},\n  running_interval: {},\n  loggedin: false,\n};\n\n// export const getTokens = createAsyncThunk(\"getTokens\", async () => {\n//   const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n//     \"email\": \"moustafashahin122@gmail.com\",\n//     \"password\": \"lovelove122@A\"\n\n//   }\n//   );\n//   console.log(data);\n//   // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:23 ~ getTokens ~ data:\", data);\n//   return data;\n// });\n\n\n\n\n\n\nexport const refreshTokens = createAsyncThunk(\"refreshTokens\", async (refresh) => {\n\n  const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n    \"refresh\": refresh,\n  }\n  );\n  console.log(\"ðŸš€ ~ file: TokensSlice.jsx:33 ~ refreshTokens ~ data.access:\", data.access);\n  return data;\n\n}\n);\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n\n\n    setTokens: (state, action) => {\n\n      const { access, refresh } = action.payload;\n      // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:34 ~ access:\", access);\n      state.tokens.access = access;\n      state.tokens.refresh = refresh;\n    },\n\n    logout: (state, action) => {\n      if (sta) {\n        console.log(\"ðŸš€ ~ file: TokensSlice.jsx:62 ~ state.running_interval:\", state.running_interval);\n\n        alert(\"interval cleared\");\n\n        clearInterval(state.running_interval);\n      }\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:67 ~ state.running_interval:\", state.running_interval);\n\n      localStorage.clear();\n      alert(\"logou\");\n      state.tokens = {};\n      state.auth = false;\n      state.user = {};\n      state.loggedin = false;\n\n    },\n    setUser: (state, action) => {\n\n      const { user_id } = action.payload;\n      state.user.user_id = user_id;\n\n    },\n    updateAuth: (state, action) => {\n\n      state.auth = action.payload;\n\n\n    },\n    setRunningInterval: (state, action) => {\n      if (!state.loggedin) {\n        state.running_interval = action.payload;\n        console.log(\"///////////////////////////////////////////////////////////////////////////////\");\n        console.log(\"ðŸš€ ~ file: TokensSlice.jsx:89 ~ state.running_interval:\", state.running_interval);\n\n      } else {\n        alert(\"there is another interval running\");\n      }\n\n\n\n    },\n    setLoggedIn: (state, action) => {\n\n      state.loggedin = true;\n\n\n    },\n    setupdateTokensfun: (state, action) => {\n\n      state.updateTokensfun = action.payload;\n\n\n    },\n    // refreshTokens: (state) => {\n    //   state.auth ;\n\n\n    // },\n\n\n  },\n\n  extraReducers: (builder) => {\n    // builder.addCase(getTokens.fulfilled, (state, action) => {\n    //   state.tokens = action.payload;\n    //   // state.tokens.access = access;\n    //   // state.tokens.refresh = refresh;\n    //   // console.log(\"dssssssssssssssssssssssssssssss\", state.tokens.access);\n    //   state.full = true;\n    // });\n\n\n    builder.addCase(refreshTokens.fulfilled, (state, action) => {\n      state.tokens.access = action.payload.access;\n      // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:88 ~ builder.addCase ~ action.payload.access:\", action.payload.access);\n\n      console.log(\"*******************************************************************\");\n      state.auth = true;\n      const { user_id } = jwt_decode(state.tokens.access);\n      state.user.user_id = user_id;\n      // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:89 ~ builder.addCase ~ user_id:\", user_id);\n      state.loggedin = true;\n\n    });\n    builder.addCase(refreshTokens.rejected, (state, action) => {\n\n      alert(\"failed to refresh\");\n    });\n  },\n});\nexport const { setTokens, updateAuth, setUser, logout, setupdateTokensfun, setRunningInterval, setLoggedIn } = TokensSlice.actions;\n\nexport default TokensSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}