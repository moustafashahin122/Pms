{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst l = \"\";\nconst initialState = {\n  tokens: {},\n  // login:\n  user: {},\n  full: false,\n  auth: false\n};\nexport const getTokens = createAsyncThunk(\"getTokens\", async () => {\n  const {\n    data\n  } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n    \"email\": \"moustafashahin122@gmail.com\",\n    \"password\": \"lovelove122@A\"\n  });\n  console.log(data);\n  console.log(\"ðŸš€ ~ file: TokensSlice.jsx:23 ~ getTokens ~ data:\", data);\n  return data;\n});\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n    setTokens: (state, action) => {\n      const {\n        access,\n        refresh\n      } = action.payload;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:34 ~ access:\", access);\n      state.tokens.access = access;\n      state.tokens.refresh = refresh;\n    },\n    updateAuth: (state, action) => {\n      state.auth = action.payload;\n    },\n    refreshTokens: (state, action) => {\n      state.auth = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getTokens.fulfilled, (state, action) => {\n      state.tokens = action.payload;\n      // state.tokens.access = access;\n      // state.tokens.refresh = refresh;\n      console.log(\"dssssssssssssssssssssssssssssss\", state.tokens.access);\n      state.full = true;\n    });\n  }\n});\nexport const {\n  setTokens,\n  updateAuth\n} = TokensSlice.actions;\nexport default TokensSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","l","initialState","tokens","user","full","auth","getTokens","data","post","console","log","TokensSlice","name","reducers","setTokens","state","action","access","refresh","payload","updateAuth","refreshTokens","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["/home/shahin/GithubU/pms-iti/frontend/src/redux/slices/TokensSlice.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\nconst l = \"\";\n\n\n\nconst initialState = {\n  tokens: {},\n  // login:\n  user:{},\n  full: false,\n  auth: false,\n};\n\nexport const getTokens = createAsyncThunk(\"getTokens\", async () => {\n  const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n    \"email\": \"moustafashahin122@gmail.com\",\n    \"password\": \"lovelove122@A\"\n\n  }\n  );\n  console.log(data);\n  console.log(\"ðŸš€ ~ file: TokensSlice.jsx:23 ~ getTokens ~ data:\", data)\n  return data;\n});\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n\n\n    setTokens: (state, action) => {\n\n      const { access, refresh } = action.payload;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:34 ~ access:\", access);\n      state.tokens.access = access;\n      state.tokens.refresh = refresh;\n    },\n    updateAuth: (state, action) => {\n      state.auth = action.payload;\n\n\n    },\n    refreshTokens: (state, action) => {\n      state.auth = action.payload;\n\n\n    },\n\n\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(getTokens.fulfilled, (state, action) => {\n      state.tokens = action.payload;\n      // state.tokens.access = access;\n      // state.tokens.refresh = refresh;\n      console.log(\"dssssssssssssssssssssssssssssss\", state.tokens.access);\n      state.full = true;\n    });\n  },\n});\nexport const { setTokens, updateAuth } = TokensSlice.actions;\n\nexport default TokensSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,CAAC,GAAG,EAAE;AAIZ,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,CAAC,CAAC;EACV;EACAC,IAAI,EAAC,CAAC,CAAC;EACPC,IAAI,EAAE,KAAK;EACXC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGT,gBAAgB,CAAC,WAAW,EAAE,YAAY;EACjE,MAAM;IAAEU;EAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,wCAAwC,EAAE;IAC1E,OAAO,EAAE,6BAA6B;IACtC,UAAU,EAAE;EAEd,CACA,CAAC;EACDC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjBE,OAAO,CAACC,GAAG,CAAC,mDAAmD,EAAEH,IAAI,CAAC;EACtE,OAAOA,IAAI;AACb,CAAC,CAAC;AACF,MAAMI,WAAW,GAAGb,WAAW,CAAC;EAC9Bc,IAAI,EAAE,QAAQ;EACdX,YAAY;EACZY,QAAQ,EAAE;IAGRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAE5B,MAAM;QAAEC,MAAM;QAAEC;MAAQ,CAAC,GAAGF,MAAM,CAACG,OAAO;MAC1CV,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEO,MAAM,CAAC;MAC9DF,KAAK,CAACb,MAAM,CAACe,MAAM,GAAGA,MAAM;MAC5BF,KAAK,CAACb,MAAM,CAACgB,OAAO,GAAGA,OAAO;IAChC,CAAC;IACDE,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACV,IAAI,GAAGW,MAAM,CAACG,OAAO;IAG7B,CAAC;IACDE,aAAa,EAAEA,CAACN,KAAK,EAAEC,MAAM,KAAK;MAChCD,KAAK,CAACV,IAAI,GAAGW,MAAM,CAACG,OAAO;IAG7B;EAGF,CAAC;EAEDG,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAAClB,SAAS,CAACmB,SAAS,EAAE,CAACV,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACb,MAAM,GAAGc,MAAM,CAACG,OAAO;MAC7B;MACA;MACAV,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEK,KAAK,CAACb,MAAM,CAACe,MAAM,CAAC;MACnEF,KAAK,CAACX,IAAI,GAAG,IAAI;IACnB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEU,SAAS;EAAEM;AAAW,CAAC,GAAGT,WAAW,CAACe,OAAO;AAE5D,eAAef,WAAW,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}