{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  tokens: {},\n  user: {},\n  full: false,\n  auth: false\n};\nexport const getTokens = createAsyncThunk(\"getTokens\", async () => {\n  const {\n    data\n  } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n    \"email\": \"moustafashahin122@gmail.com\",\n    \"password\": \"lovelove122@A\"\n  });\n  console.log(data);\n  // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:23 ~ getTokens ~ data:\", data);\n  return data;\n});\nexport const refreshTokens = createAsyncThunk(\"refreshTokens\", async (refresh, thunkAPI) => {\n  try {\n    const {\n      data\n    } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n      \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY4NzM4MTA4NCwiaWF0IjoxNjg3Mjk0Njg0LCJqdGkiOiJjYTE3NGNmZTdhYmY0NTNjYWZiOWFmODQ3MzA1MDc3NyIsInVzZXJfaWQiOjR9.b-Js_tpFQfiMd6Qif2CsSltrVJ77NflXH7KN-_zH4r0\"\n    });\n    // return data;\n\n    const currentState = thunkAPI.getState();\n    thunkAPI.setState({\n      ...currentState,\n      tokens: {\n        ...currentState.tokens,\n        access: data.access\n      }\n    });\n    console.log(\"ðŸš€ ~ file: TokensSlice.jsx:33 ~ refreshTokens ~ data.access:\", data.access);\n  } catch (error) {\n    alert(\"unable to refresh\");\n  }\n  // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:23 ~ getTokens ~ data:\", data);\n});\n\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n    setTokens: (state, action) => {\n      const {\n        access,\n        refresh\n      } = action.payload;\n      // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:34 ~ access:\", access);\n      state.tokens.access = access;\n      state.tokens.refresh = refresh;\n    },\n    setUser: (state, action) => {\n      const {\n        user_id\n      } = action.payload;\n      state.user.user_id = user_id;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:44 ~ user_id:\", user_id);\n    },\n    updateAuth: (state, action) => {\n      state.auth = action.payload;\n    }\n    // refreshTokens: (state) => {\n    //   state.auth ;\n\n    // },\n  },\n\n  extraReducers: builder => {\n    builder.addCase(getTokens.fulfilled, (state, action) => {\n      state.tokens = action.payload;\n      // state.tokens.access = access;\n      // state.tokens.refresh = refresh;\n      // console.log(\"dssssssssssssssssssssssssssssss\", state.tokens.access);\n      state.full = true;\n    });\n  }\n});\nexport const {\n  setTokens,\n  updateAuth,\n  setUser\n} = TokensSlice.actions;\nexport default TokensSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","tokens","user","full","auth","getTokens","data","post","console","log","refreshTokens","refresh","thunkAPI","currentState","getState","setState","access","error","alert","TokensSlice","name","reducers","setTokens","state","action","payload","setUser","user_id","updateAuth","extraReducers","builder","addCase","fulfilled","actions","reducer"],"sources":["/home/shahin/GithubU/pms-iti/frontend/src/redux/slices/TokensSlice.jsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n\n\n\nconst initialState = {\n  tokens: {},\n  user: {},\n  full: false,\n  auth: false,\n};\n\nexport const getTokens = createAsyncThunk(\"getTokens\", async () => {\n  const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/create/\", {\n    \"email\": \"moustafashahin122@gmail.com\",\n    \"password\": \"lovelove122@A\"\n\n  }\n  );\n  console.log(data);\n  // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:23 ~ getTokens ~ data:\", data);\n  return data;\n});\nexport const refreshTokens = createAsyncThunk(\"refreshTokens\", async (refresh, thunkAPI) => {\n  try {\n    const { data } = await axios.post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", {\n      \"refresh\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTY4NzM4MTA4NCwiaWF0IjoxNjg3Mjk0Njg0LCJqdGkiOiJjYTE3NGNmZTdhYmY0NTNjYWZiOWFmODQ3MzA1MDc3NyIsInVzZXJfaWQiOjR9.b-Js_tpFQfiMd6Qif2CsSltrVJ77NflXH7KN-_zH4r0\",\n    }\n    );\n    // return data;\n\n    const currentState = thunkAPI.getState();\n    thunkAPI.setState({\n      ...currentState,\n      tokens: {\n        ...currentState.tokens,\n        access: data.access,\n      },\n    });\n\n    console.log(\"ðŸš€ ~ file: TokensSlice.jsx:33 ~ refreshTokens ~ data.access:\", data.access)\n  } catch (error) {\n    alert(\"unable to refresh\");\n\n\n\n  }\n  // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:23 ~ getTokens ~ data:\", data);\n});\nconst TokensSlice = createSlice({\n  name: \"Tokens\",\n  initialState,\n  reducers: {\n\n\n    setTokens: (state, action) => {\n\n      const { access, refresh } = action.payload;\n      // console.log(\"ðŸš€ ~ file: TokensSlice.jsx:34 ~ access:\", access);\n      state.tokens.access = access;\n      state.tokens.refresh = refresh;\n    },\n    setUser: (state, action) => {\n\n      const { user_id } = action.payload;\n      state.user.user_id = user_id;\n      console.log(\"ðŸš€ ~ file: TokensSlice.jsx:44 ~ user_id:\", user_id);\n\n    },\n    updateAuth: (state, action) => {\n\n      state.auth = action.payload;\n\n\n    },\n    // refreshTokens: (state) => {\n    //   state.auth ;\n\n\n    // },\n\n\n  },\n\n  extraReducers: (builder) => {\n    builder.addCase(getTokens.fulfilled, (state, action) => {\n      state.tokens = action.payload;\n      // state.tokens.access = access;\n      // state.tokens.refresh = refresh;\n      // console.log(\"dssssssssssssssssssssssssssssss\", state.tokens.access);\n      state.full = true;\n    });\n  },\n});\nexport const { setTokens, updateAuth, setUser } = TokensSlice.actions;\n\nexport default TokensSlice.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAKzB,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,CAAC,CAAC;EACVC,IAAI,EAAE,CAAC,CAAC;EACRC,IAAI,EAAE,KAAK;EACXC,IAAI,EAAE;AACR,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGR,gBAAgB,CAAC,WAAW,EAAE,YAAY;EACjE,MAAM;IAAES;EAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,wCAAwC,EAAE;IAC1E,OAAO,EAAE,6BAA6B;IACtC,UAAU,EAAE;EAEd,CACA,CAAC;EACDC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB;EACA,OAAOA,IAAI;AACb,CAAC,CAAC;AACF,OAAO,MAAMI,aAAa,GAAGb,gBAAgB,CAAC,eAAe,EAAE,OAAOc,OAAO,EAAEC,QAAQ,KAAK;EAC1F,IAAI;IACF,MAAM;MAAEN;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,yCAAyC,EAAE;MAC3E,SAAS,EAAE;IACb,CACA,CAAC;IACD;;IAEA,MAAMM,YAAY,GAAGD,QAAQ,CAACE,QAAQ,CAAC,CAAC;IACxCF,QAAQ,CAACG,QAAQ,CAAC;MAChB,GAAGF,YAAY;MACfZ,MAAM,EAAE;QACN,GAAGY,YAAY,CAACZ,MAAM;QACtBe,MAAM,EAAEV,IAAI,CAACU;MACf;IACF,CAAC,CAAC;IAEFR,OAAO,CAACC,GAAG,CAAC,8DAA8D,EAAEH,IAAI,CAACU,MAAM,CAAC;EAC1F,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,KAAK,CAAC,mBAAmB,CAAC;EAI5B;EACA;AACF,CAAC,CAAC;;AACF,MAAMC,WAAW,GAAGrB,WAAW,CAAC;EAC9BsB,IAAI,EAAE,QAAQ;EACdpB,YAAY;EACZqB,QAAQ,EAAE;IAGRC,SAAS,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAE5B,MAAM;QAAER,MAAM;QAAEL;MAAQ,CAAC,GAAGa,MAAM,CAACC,OAAO;MAC1C;MACAF,KAAK,CAACtB,MAAM,CAACe,MAAM,GAAGA,MAAM;MAC5BO,KAAK,CAACtB,MAAM,CAACU,OAAO,GAAGA,OAAO;IAChC,CAAC;IACDe,OAAO,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAE1B,MAAM;QAAEG;MAAQ,CAAC,GAAGH,MAAM,CAACC,OAAO;MAClCF,KAAK,CAACrB,IAAI,CAACyB,OAAO,GAAGA,OAAO;MAC5BnB,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEkB,OAAO,CAAC;IAElE,CAAC;IACDC,UAAU,EAAEA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAE7BD,KAAK,CAACnB,IAAI,GAAGoB,MAAM,CAACC,OAAO;IAG7B;IACA;IACA;;IAGA;EAGF,CAAC;;EAEDI,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CAACC,OAAO,CAAC1B,SAAS,CAAC2B,SAAS,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACtB,MAAM,GAAGuB,MAAM,CAACC,OAAO;MAC7B;MACA;MACA;MACAF,KAAK,CAACpB,IAAI,GAAG,IAAI;IACnB,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAEmB,SAAS;EAAEM,UAAU;EAAEF;AAAQ,CAAC,GAAGP,WAAW,CAACc,OAAO;AAErE,eAAed,WAAW,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}